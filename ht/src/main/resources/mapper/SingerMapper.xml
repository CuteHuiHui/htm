<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 映射文件的命名空间namespace的值，与之对应的映射接口的全类名 -->
<mapper namespace="com.yc.ht.mapper.SingerMapper">
	<select id="findSinger" resultType="Singer">
		select * from(select rownum rn, s.* from (select * from singer)s where 9>rownum ) where rn>0
	</select>
	
	<select id="refer"  resultType="Languages" >
		select * from languages
	</select>
	
	<select id="refre" resultType="Singer" parameterType="Singer">
		select * from singer 
	</select>
	
	<select id="clikee" resultType="Singer" parameterType="String">
		 select * from singer where lgid like '${_parameter}' 
	</select>
	
	 <!-- <select id="HOT" resultType="Singer" parameterType="String">
		select * from singer where sgEname like '${_parameter}'
	</select> --> 
	
	<select id="WHOle" resultType="Singer" parameterType="Singer">
		select * from singer 
	</select>
	
	<resultMap type="PaginationBean" id="PaginationBeanMap">
		<result column="pageSize" property="pageSize" />
		<result column="currPage" property="currPage" />
		<collection property="rows"
			column="{pageSize=pageSize,currPage=currPage}" ofType="Singer"
			select="getPaginationSong" />
	</resultMap>

	<select id="findPaginationSong" parameterType="PaginationBean"
		resultMap="PaginationBeanMap" useCache="false" flushCache="true">
		select count(1) total,ceil(count(1)/${pageSize}) totalPage,
		${pageSize} pageSize,${currPage} currPage from Singer
	</select>

	<select id="getPaginationSong" resultType="Singer" useCache="false" flushCache="true">
		select * from
		(select n.*,rownum rn from (select *
		from Singer order by 1) n
		where ${pageSize} *
		${currPage} >= rownum) where rn > ( ${currPage} - 1) * ${pageSize}
	</select>
	
	
	<resultMap type="PaginationBean" id="PaginationBeanMapS">
		<result column="pageSize" property="pageSize" />
		<result column="currPage" property="currPage" />
		<collection property="rows"
			column="{pageSize=pageSize,currPage=currPage}" ofType="Singer"
			select="getPaginationSinger" />
	</resultMap>
				
	<select id="findPaginationSinger" parameterType="PaginationBean"
		resultMap="PaginationBeanMapS" useCache="false" flushCache="true">
		select count(1) total,ceil(count(1)/${pageSize}) totalPage,
		${pageSize} pageSize,${currPage} currPage from Singer
	</select>

	<select id="getPaginationSinger" resultType="Singer" useCache="false" flushCache="true">
		select * from
		(select n.*,rownum rn from (select *
		from Singer order by 1) n
		where ${pageSize} *
		${currPage} >= rownum) where rn > ( ${currPage} - 1) * ${pageSize}
	</select>
	
	
	<update id="modifySinger" parameterType="Singer">
		update Singer
		<set>
			<if test="sgname!=null">sgname=#{sgname},</if>
			<if test="sgEname!=null">sgEname=#{sgEname},</if>
			<if test="sgnation!=null">sgnation=#{sgnation},</if>
			<if test="sggender!=null">sggender=#{sggender},</if>
			<if test="sgpicPath!=null">sgpicPath=#{sgpicPath},</if>
			<if test="sgintroduce!=null">sgintroduce = #{sgintroduce},</if>
		</set>
		where sgid=#{sgid}
	</update>
	
	
	<select id="findSingerById" parameterType="String" resultType="Singer">
		select * from Singer where sgid=#{sgid}
	</select>
	
	
	<delete id="removeSinger" parameterType="String">
		delete Singer where sgid=#{sgid}
	</delete>
	
	
	<select id="findSingerByNames" parameterType="String" resultType="Singer">
		select * from Singer where sgname like '%${_parameter}%'
	</select>
	
	<select id="findSingerbyName" parameterType="string" resultType="Singer">
		select * from Singer where sgname = #{sgname}	
	</select>
	
	<insert id="addSinger" parameterType="Singer">
		insert into singer values(seq_singer_sgid.nextval,#{sgname},#{sgEname},#{sgnation},
		<choose>
			<when test="lgid !=null">#{lgid}</when><otherwise>10001</otherwise>
		</choose>,#{sggender},
		<choose><when test="sgpicPath !=null">#{sgpicPath}</when><otherwise>'images/not_pic.jpg'</otherwise></choose>,
		<choose><when test="sgintroduce !=null">#{sgintroduce}</when><otherwise>'没有介绍'</otherwise></choose>,'')
	</insert>
	
</mapper>